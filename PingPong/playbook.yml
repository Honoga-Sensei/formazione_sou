
---
# Set host inside the playbook
- name: Host connection
  hosts: nodes
  remote_user: vagrant
  become: yes
  tasks:

# Install docker 
    - name: Install pakage
      apt:
        name:
          - docker.io
        state: latest
        update_cache: true

# Copy necessary file from your pc to the VM
    - name: Copy Dockerfile
      ansible.builtin.template:
        src: ./Dockerfile
        dest: ./
        owner: vagrant
        group: vagrant
        mode: "0744"

    - name: Copy migration.sh
      ansible.builtin.template:
        src: ./migration.sh
        dest: ./
        owner: vagrant
        group: vagrant
        mode: "0744"

# Start Docker
    - name: Start and enable Docker service
      service:
        name: docker
        state: started
        enabled: yes

# Build Docker image with the Dockerfile
    - name: Build Docker image
      docker_image:
        name: migration_node
        source: build
        build:
          path: ./
          dockerfile: Dockerfile

# Start container
    - name: Start container
      docker_container:
        name: migration_node_container
        image: migration_node
        ports:
          - "3000:3000"
        state: started            

# Set timer for node1
    - name: Set up cron job to start the container node1
      cron:
        name: "Start migration_node_container"
        minute: "*/2"
        job: "sudo docker start migration_node_container"
      when: inventory_hostname == "node1"

    - name: Set up cron job to kill the container node1
      cron:
        name: "Kill migration_node_container"
        minute: "1-59/2"
        job: "sudo docker kill migration_node_container"
      when: inventory_hostname == "node1"

# Set timer for node2
    - name: Set up cron job to start the container node2
      cron:
        name: "Start migration_node_container"
        minute: "1-59/2"
        job: "sudo docker start migration_node_container"
      when: inventory_hostname == "node2"

    - name: Set up cron job to kill the container node2
      cron:
        name: "Kill migration_node_container"
        minute: "*/2"
        job: "sudo docker kill migration_node_container"
      when: inventory_hostname == "node2"

